{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","location","setLocation","previsões","setPrevisões","useEffect","fetch","then","response","json","resposta","city","region","lat","lon","objeto","daily","className","map","item","x","src","weather","icon","indexOf","description","temp","min","max","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAoDeA,MAjDf,WAAgB,IAAD,EAEmBC,mBAAS,IAF5B,mBAENC,EAFM,KAEIC,EAFJ,OAGqBF,mBAAS,IAH9B,mBAGNG,EAHM,KAGKC,EAHL,KAyBb,OApBAC,qBAAU,WACRC,MAAM,uCACHC,MAAK,SAACC,GAEL,OADiBA,EAASC,UAG3BF,MAAK,SAACG,GAEL,OADAR,EAAY,GAAD,OAAIQ,EAASC,KAAb,aAAsBD,EAASE,SACnCN,MAAM,uDAAD,OAAwDI,EAASG,IAAjE,gBAA4EH,EAASI,IAArF,uEAEbP,MAAK,SAACQ,GAEL,OADaA,EAAON,UAGrBF,MAAK,SAACQ,GACL,IAAMC,EAAQD,EAAOC,MACrBZ,EAAaY,QAEjB,IAGA,sBAAKC,UAAU,MAAf,UACE,0DAA0BhB,KAC1B,qBAAKgB,UAAY,OAAjB,SACGd,EAAUe,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKH,UAAU,QAAf,UACE,qBAAKI,IAAG,2CAAsCF,EAAKG,QAAQ,GAAGC,KAAtD,aACR,oBAAIN,UAAY,MAAhB,SAC8B,IAA5Bd,EAAUqB,QAAQL,GAAc,OACF,IAA5BhB,EAAUqB,QAAQL,GAClB,YADA,kBAEWhB,EAAUqB,QAAQL,GAF7B,WAKJ,4BAAIA,EAAKG,QAAQ,GAAGG,cACpB,8BAAIN,EAAKO,KAAKC,IAAd,cAA2B,8BAAIR,EAAKO,KAAKE,IAAd,wBC/BxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.10a3ec68.chunk.js","sourcesContent":["import {React, useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [location, setLocation] = useState('');\n  const [previsões, setPrevisões] = useState([])\n\n  useEffect(()=>{\n    fetch('https://extreme-ip-lookup.com/json/')\n      .then((response)=>{\n        const resposta = response.json();\n        return resposta\n      })\n      .then((resposta)=>{\n        setLocation(`${resposta.city}, ${resposta.region}`);\n        return fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${resposta.lat}&lon=${resposta.lon}&units=metric&lang=pt_BR&appid=47b16d41765388e1d2e251b373b570c0`) \n      })\n      .then((objeto)=>{\n        const info = objeto.json()\n        return info\n      })\n      .then((objeto)=>{\n        const daily = objeto.daily\n        setPrevisões(daily)\n      })\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <h1>Previsão do tempo em {location}</h1>\n      <div className = 'dias'>\n        {previsões.map((item, x)=>(\n          <div className='caixa'>\n            <img src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`}/>\n            <h2 className = 'dia'>{\n              previsões.indexOf(item) === 0 ? \"Hoje\"\n              : previsões.indexOf(item) === 1\n              ? \"Amanhã\"\n              : `Daqui a ${previsões.indexOf(item)} dias`\n            }\n            </h2>\n            <p>{item.weather[0].description}</p>\n            <p>{item.temp.min} Cº -</p><p>{item.temp.max} Cº</p>\n          </div>\n          \n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}